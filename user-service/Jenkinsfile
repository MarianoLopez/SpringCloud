pipeline {
  agent any
  stages {
    stage('Build') {
      agent {
        docker {
          image 'maven:3.6.3-jdk-14'
          args '-v ${M2_HOME}:/root/.m2'
        }

      }
      when {
        expression {
          params.BUILD_BACKEND
        }

      }
      options {
        skipDefaultCheckout()
      }
      steps {
        dir(path: 'user-service') {
          sh '/jenkins_scripts/mavenBuild.sh ./pom.xml'
          stash(name: 'build-user-service', includes: 'target/**')
        }

      }
    }

    stage('Tests') {
      agent {
        docker {
          image 'maven:3.6.3-jdk-14'
          args '-v ${M2_HOME}:/root/.m2'
        }

      }
      when {
        expression {
          params.BUILD_BACKEND
        }

      }
      options {
        skipDefaultCheckout()
      }
      steps {
        dir(path: 'user-service') {
          unstash 'build-user-service'
          sh '/jenkins_scripts/mavenTest.sh ./pom.xml'
        }

      }
    }

    stage('Deploy docker image') {
      when {
        expression {
          params.BUILD_BACKEND
        }

      }
      options {
        skipDefaultCheckout()
      }
      steps {
        dir(path: 'user-service') {
          unstash 'build-user-service'
          sh '/jenkins_scripts/dockerBuildAndPublish.sh user-service'
        }

      }
    }

    stage('Clean workspace') {
      steps {
        cleanWs()
      }
    }

  }
  environment {
    M2_HOME = '/home/jenkins/.m2'
    NEXUS_URL = 'localhost'
    NEXUS_DOCKER_PORT = 8082
  }
}